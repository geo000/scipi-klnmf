// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// dense_klnmf
Rcpp::List dense_klnmf(const arma::mat& V, arma::mat& W, arma::mat& H, const arma::rowvec& vcolsum, const arma::vec& vrowsum, std::string method, int max_iter, int init_em_iter, int subprob_iter, int batch_size, int epoch_length, double shift_parameter_input, double step_size_input, int reportnum, bool verbose);
RcppExport SEXP _scipi_klnmf_dense_klnmf(SEXP VSEXP, SEXP WSEXP, SEXP HSEXP, SEXP vcolsumSEXP, SEXP vrowsumSEXP, SEXP methodSEXP, SEXP max_iterSEXP, SEXP init_em_iterSEXP, SEXP subprob_iterSEXP, SEXP batch_sizeSEXP, SEXP epoch_lengthSEXP, SEXP shift_parameter_inputSEXP, SEXP step_size_inputSEXP, SEXP reportnumSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type H(HSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type vcolsum(vcolsumSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vrowsum(vrowsumSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< int >::type init_em_iter(init_em_iterSEXP);
    Rcpp::traits::input_parameter< int >::type subprob_iter(subprob_iterSEXP);
    Rcpp::traits::input_parameter< int >::type batch_size(batch_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type epoch_length(epoch_lengthSEXP);
    Rcpp::traits::input_parameter< double >::type shift_parameter_input(shift_parameter_inputSEXP);
    Rcpp::traits::input_parameter< double >::type step_size_input(step_size_inputSEXP);
    Rcpp::traits::input_parameter< int >::type reportnum(reportnumSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(dense_klnmf(V, W, H, vcolsum, vrowsum, method, max_iter, init_em_iter, subprob_iter, batch_size, epoch_length, shift_parameter_input, step_size_input, reportnum, verbose));
    return rcpp_result_gen;
END_RCPP
}
// scipi_dense_klnmf
Rcpp::List scipi_dense_klnmf(const arma::mat& V, arma::mat& W, arma::mat& H, const arma::rowvec& vcolsum, const arma::vec& vrowsum, int max_iter, int init_em_iter, int subprob_iter, double shift_parameter_input, double step_size_input, bool verbose);
RcppExport SEXP _scipi_klnmf_scipi_dense_klnmf(SEXP VSEXP, SEXP WSEXP, SEXP HSEXP, SEXP vcolsumSEXP, SEXP vrowsumSEXP, SEXP max_iterSEXP, SEXP init_em_iterSEXP, SEXP subprob_iterSEXP, SEXP shift_parameter_inputSEXP, SEXP step_size_inputSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type H(HSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type vcolsum(vcolsumSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vrowsum(vrowsumSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< int >::type init_em_iter(init_em_iterSEXP);
    Rcpp::traits::input_parameter< int >::type subprob_iter(subprob_iterSEXP);
    Rcpp::traits::input_parameter< double >::type shift_parameter_input(shift_parameter_inputSEXP);
    Rcpp::traits::input_parameter< double >::type step_size_input(step_size_inputSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(scipi_dense_klnmf(V, W, H, vcolsum, vrowsum, max_iter, init_em_iter, subprob_iter, shift_parameter_input, step_size_input, verbose));
    return rcpp_result_gen;
END_RCPP
}
// stochastic_scipi_dense_klnmf
Rcpp::List stochastic_scipi_dense_klnmf(const arma::mat& V, arma::mat& W, arma::mat& H, const arma::rowvec& vcolsum, const arma::vec& vrowsum, int max_iter, int init_em_iter, int subprob_iter, int batch_size, int epoch_length, double shift_parameter_input, double step_size_input, bool verbose);
RcppExport SEXP _scipi_klnmf_stochastic_scipi_dense_klnmf(SEXP VSEXP, SEXP WSEXP, SEXP HSEXP, SEXP vcolsumSEXP, SEXP vrowsumSEXP, SEXP max_iterSEXP, SEXP init_em_iterSEXP, SEXP subprob_iterSEXP, SEXP batch_sizeSEXP, SEXP epoch_lengthSEXP, SEXP shift_parameter_inputSEXP, SEXP step_size_inputSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type H(HSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type vcolsum(vcolsumSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vrowsum(vrowsumSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< int >::type init_em_iter(init_em_iterSEXP);
    Rcpp::traits::input_parameter< int >::type subprob_iter(subprob_iterSEXP);
    Rcpp::traits::input_parameter< int >::type batch_size(batch_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type epoch_length(epoch_lengthSEXP);
    Rcpp::traits::input_parameter< double >::type shift_parameter_input(shift_parameter_inputSEXP);
    Rcpp::traits::input_parameter< double >::type step_size_input(step_size_inputSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(stochastic_scipi_dense_klnmf(V, W, H, vcolsum, vrowsum, max_iter, init_em_iter, subprob_iter, batch_size, epoch_length, shift_parameter_input, step_size_input, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_scipi_klnmf_dense_klnmf", (DL_FUNC) &_scipi_klnmf_dense_klnmf, 15},
    {"_scipi_klnmf_scipi_dense_klnmf", (DL_FUNC) &_scipi_klnmf_scipi_dense_klnmf, 11},
    {"_scipi_klnmf_stochastic_scipi_dense_klnmf", (DL_FUNC) &_scipi_klnmf_stochastic_scipi_dense_klnmf, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_scipi_klnmf(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
